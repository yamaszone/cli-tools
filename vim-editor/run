#!/bin/bash

if [[ -z ${EDITOR_VERSION} ]]; then
	EDITOR_VERSION=latest
fi

confirm(){
    read -p "Continue? (y/n)? " -n 1 -r
    echo  # Move to a new line
    if [[ $REPLY =~ ^[Nn]$ ]]
    then
        exit 1
    fi
}

build(){
	docker build \
		--build-arg DEF_GROUP=core \
		--build-arg DEF_GROUP_ID=500 \
		--build-arg DEF_USER=core \
		--build-arg DEF_USER_ID=500 \
		-t yamaszone/vim-editor:${EDITOR_VERSION} -f Dockerfile .
}

install(){
	if [[ ${EDITOR_VERSION} == 'latest' ]]; then
		printf "EDITOR_VERSION='latest'. Available versions: latest, v0.2.0. Run 'export EDITOR_VERSION=<version>' to override.\n"
		confirm
	fi

	/bin/cp install /tmp/vim-editor
	sed -i -e "s/EDITOR_VERSION/${EDITOR_VERSION}/g" /tmp/vim-editor
	sudo /bin/mv /tmp/vim-editor /opt/bin/editor
}

help(){
	echo "Usage:"
	printf "\t build\t\t: Build image for editor.\n"
	printf "\t install\t: Install Vim editor and run 'editor' to launch it from terminal.\n"
	printf "\t tests\t\t: Run tests to verify correct dependencies are installed.\n"
	printf "\t h, help\t: Show this help.\n"
	exit 0
}

if [[ -z $1 ]];then
	help
	exit 0
fi

case $1 in
	build)
		build
		;;
	install)
		install
		;;
	tests)
		docker rm -f test_editor > /dev/null 2>&1
		docker run --name=test_editor yamaszone/vim-editor:${EDITOR_VERSION} /bin/bash -c "while true; do ping 8.8.8.8; done" &
		~/cli-tools/vendor/bats/bin/bats ~/cli-tools/tests/bats/vim-editor.bats
		docker rm -f test_editor
		;;
	* | h | help)
		help
		;;
esac
